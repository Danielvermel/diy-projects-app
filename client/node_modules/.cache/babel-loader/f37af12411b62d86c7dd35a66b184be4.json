{"ast":null,"code":"var _jsxFileName = \"/Users/danielleite/Desktop/My_Projects/diy-project-app/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useStyles from './styles';\nimport FileBase from 'react-file-base64';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { createPost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        varinat: \"h6\",\n        children: \"Creating a DIY Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        size: \"large\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"submit\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"hxIBCs91Lx0HtQqmJuBtACJ8f54=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/danielleite/Desktop/My_Projects/diy-project-app/client/src/components/Form/Form.js"],"names":["React","useState","useStyles","FileBase","TextField","Button","Typography","Paper","useDispatch","createPost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","dispatch","classes","handleSubmit","e","preventDefault","updatePost","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport useStyles from './styles';\nimport FileBase from 'react-file-base64';\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport {createPost} from '../../actions/posts';\n\n\nconst Form = ({currentId, setCurrentId}) => {\n    const [postData, setPostData] = useState({\n        creator:'', title:'', message:'', tags:'', selectedFile:''\n    }) \n\n    const dispatch = useDispatch()\n\n\n    const classes = useStyles();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentId){\n            dispatch(updatePost(currentId,postData))\n        }else{\n            dispatch(createPost(postData))\n        }\n\n        \n    };\n\n    const clear = () => {};\n    \n    return(\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography varinat=\"h6\">Creating a DIY Project</Typography>\n                <TextField  name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value})} />\n                <TextField  name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value})} />\n                <TextField  name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value})} />\n                <TextField  name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value})} />\n                \n                <div className={classes.fileInput}>\n                    <FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile: base64})}/>\n                </div>\n\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\" fullWidth>\n                    Submit\n                </Button>\n\n                <Button  variant=\"contained\" color=\"secondary\" type=\"submit\" size=\"small\" onClick={clear} fullWidth>\n                    Clear\n                </Button>\n            </form>\n        </Paper>\n    );\n}\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}